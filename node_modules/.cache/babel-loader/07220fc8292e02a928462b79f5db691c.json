{"ast":null,"code":"var _jsxFileName = \"/home/firdos/WORKDIR/Git-Repos/dashboard-demo/src/components/dashboard-widget.js\";\nimport React from \"react\"; // import _ from \"lodash\";\n\nimport \"./grid/style.css\";\nimport \"./grid/resizable.css\";\nimport RGL, { WidthProvider } from \"react-grid-layout\";\nimport BarChart from \"./dash-widget/barChart\";\nimport LineChart from \"./dash-widget/lineChart\";\nimport DoughnutChart from \"./dash-widget/doughnut\";\nimport { Paper } from \"@material-ui/core\";\nimport { Grid } from \"@material-ui/core\";\n\nvar Chart = require(\"chart.js\");\n\nfunction getRandomArray(numItems) {\n  // Create random array of objects\n  let names = \"ABCDEFGHIJKLMNOPQRSTUVWXYZ\";\n  let data = [];\n\n  for (var i = 0; i < numItems; i++) {\n    data.push({\n      label: names[i],\n      value: Math.round(20 + 80 * Math.random())\n    });\n  }\n\n  return data;\n}\n\nfunction getRandomDateArray(numItems) {\n  // Create random array of objects (with date)\n  let data = [];\n  let baseTime = new Date(\"2018-05-01T00:00:00\").getTime();\n  let dayMs = 24 * 60 * 60 * 1000;\n\n  for (var i = 0; i < numItems; i++) {\n    data.push({\n      time: new Date(baseTime + i * dayMs),\n      value: Math.round(20 + 80 * Math.random())\n    });\n  }\n\n  return data;\n}\n\nfunction getData() {\n  let data = [];\n  data.push({\n    type: \"BarChart\",\n    title: \"Visits\",\n    data: getRandomDateArray(150)\n  });\n  data.push({\n    title: \"Categories\",\n    data: getRandomArray(20)\n  });\n  data.push({\n    title: \"Categories\",\n    data: getRandomArray(10)\n  });\n  data.push({\n    title: \"Data 4\",\n    data: getRandomArray(6)\n  });\n  return data;\n}\n\nconst ReactGridLayout = WidthProvider(RGL);\nconst PlotData = getData();\nexport default class DashboardWidget extends React.PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.openEditWidget = () => {\n      console.log(\"button clicked\");\n    };\n\n    const layout = this.generateLayout();\n    const isHovering = false;\n    console.log(PlotData);\n    console.log(layout);\n    this.state = {\n      layout,\n      isHovering\n    };\n    console.log(isHovering);\n    this.handleMouseHover = this.handleMouseHover.bind(this);\n  }\n\n  handleMouseHover() {\n    this.setState(this.toggleHoverState);\n  }\n\n  toggleHoverState(state) {\n    return {\n      isHovering: !state.isHovering\n    };\n  }\n\n  generateDOM() {\n    return this.props.items.map(i => React.createElement(Grid, {\n      component: Paper,\n      style: {\n        borderRadius: \"3px\"\n      },\n      key: i.id,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      style: {\n        maxHeight: \"50px\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      style: {\n        float: \"left\",\n        marginTop: \"15px\",\n        marginLeft: \"10px\",\n        fontSize: \"16px\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120\n      },\n      __self: this\n    }, i.type == \"Bar Chart\" && i.id == 1 ? React.createElement(\"b\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128\n      },\n      __self: this\n    }, i.type) : null, i.type == \"Line Chart\" && i.id == 2 ? React.createElement(\"b\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129\n      },\n      __self: this\n    }, i.type) : null, i.type == \"Doughnut Chart\" && i.id == 3 ? React.createElement(\"b\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130\n      },\n      __self: this\n    }, i.type) : null, i.type == \"Pie Chart\" && i.id == 4 ? React.createElement(\"b\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131\n      },\n      __self: this\n    }, i.type) : null, i.type == \"Stackbar Chart\" && i.id == 5 ? React.createElement(\"b\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132\n      },\n      __self: this\n    }, i.type) : null, i.type == \"Radar Chart\" && i.id == 6 ? React.createElement(\"b\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133\n      },\n      __self: this\n    }, i.type) : null)), i.type == \"Bar Chart\" && i.id == 1 ? React.createElement(BarChart, {\n      data: PlotData[2].data,\n      title: PlotData[2].title,\n      color: \"#BB86FC\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137\n      },\n      __self: this\n    }) : null, i.type == \"Line Chart\" && i.id == 2 ? React.createElement(LineChart, {\n      data: PlotData[0].data,\n      title: PlotData[0].title // color=\"#03DAC6\"\n      ,\n      color: \"#661FFF\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 144\n      },\n      __self: this\n    }) : null, i.type == \"Doughnut Chart\" && i.id == 3 ? React.createElement(DoughnutChart, {\n      data: PlotData[3].data,\n      title: PlotData[3].title,\n      colors: [\"#bb86fc\", \"#c690ff\", \"#d19aff\", \"#dca5ff\", \"#daaef6\", \"#d8bcea\"],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 152\n      },\n      __self: this\n    }) : null));\n  }\n\n  generateLayout() {\n    const p = this.props;\n    console.log(this.props);\n    return _.map(new Array(p.items.length), function (item, i) {\n      console.log(item, i);\n      const y = _.result(p, \"y\") || Math.ceil(Math.random() * 1) + 1;\n      const xAxis = (i * 2 + 2) % 6;\n      return {\n        x: xAxis,\n        y: Math.floor(i / 6) * y,\n        w: 2,\n        h: y,\n        i: i.toString()\n      };\n    });\n  }\n\n  render() {\n    return React.createElement(ReactGridLayout, Object.assign({\n      layout: this.state.layout\n    }, this.props, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 188\n      },\n      __self: this\n    }), this.generateDOM());\n  }\n\n}\nDashboardWidget.defaultProps = {\n  className: \"layout\",\n  // items: 6,\n  items: [{\n    type: \"Bar Chart\",\n    id: 1\n  }, {\n    type: \"Line Chart\",\n    id: 2\n  }, {\n    type: \"Doughnut Chart\",\n    id: 3\n  }, {\n    type: \"Pie Chart\",\n    id: 4\n  }, {\n    type: \"Stackbar Chart\",\n    id: 5\n  }, {\n    type: \"Radar Chart\",\n    id: 6\n  }],\n  cols: 8\n};","map":{"version":3,"sources":["/home/firdos/WORKDIR/Git-Repos/dashboard-demo/src/components/dashboard-widget.js"],"names":["React","RGL","WidthProvider","BarChart","LineChart","DoughnutChart","Paper","Grid","Chart","require","getRandomArray","numItems","names","data","i","push","label","value","Math","round","random","getRandomDateArray","baseTime","Date","getTime","dayMs","time","getData","type","title","ReactGridLayout","PlotData","DashboardWidget","PureComponent","constructor","props","openEditWidget","console","log","layout","generateLayout","isHovering","state","handleMouseHover","bind","setState","toggleHoverState","generateDOM","items","map","borderRadius","id","maxHeight","float","marginTop","marginLeft","fontSize","p","_","Array","length","item","y","result","ceil","xAxis","x","floor","w","h","toString","render","defaultProps","className","cols"],"mappings":"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","sourcesContent":["import React from \"react\";\n// import _ from \"lodash\";\nimport \"./grid/style.css\";\nimport \"./grid/resizable.css\";\nimport RGL, { WidthProvider } from \"react-grid-layout\";\nimport BarChart from \"./dash-widget/barChart\";\nimport LineChart from \"./dash-widget/lineChart\";\nimport DoughnutChart from \"./dash-widget/doughnut\";\nimport { Paper } from \"@material-ui/core\";\n\nimport { Grid } from \"@material-ui/core\";\nvar Chart = require(\"chart.js\");\n\nfunction getRandomArray(numItems) {\n  // Create random array of objects\n  let names = \"ABCDEFGHIJKLMNOPQRSTUVWXYZ\";\n  let data = [];\n  for (var i = 0; i < numItems; i++) {\n    data.push({\n      label: names[i],\n      value: Math.round(20 + 80 * Math.random())\n    });\n  }\n  return data;\n}\n\nfunction getRandomDateArray(numItems) {\n  // Create random array of objects (with date)\n  let data = [];\n  let baseTime = new Date(\"2018-05-01T00:00:00\").getTime();\n  let dayMs = 24 * 60 * 60 * 1000;\n  for (var i = 0; i < numItems; i++) {\n    data.push({\n      time: new Date(baseTime + i * dayMs),\n      value: Math.round(20 + 80 * Math.random())\n    });\n  }\n  return data;\n}\nfunction getData() {\n  let data = [];\n\n  data.push({\n    type: \"BarChart\",\n    title: \"Visits\",\n    data: getRandomDateArray(150)\n  });\n\n  data.push({\n    title: \"Categories\",\n    data: getRandomArray(20)\n  });\n\n  data.push({\n    title: \"Categories\",\n    data: getRandomArray(10)\n  });\n\n  data.push({\n    title: \"Data 4\",\n    data: getRandomArray(6)\n  });\n\n  return data;\n}\nconst ReactGridLayout = WidthProvider(RGL);\nconst PlotData = getData();\nexport default class DashboardWidget extends React.PureComponent {\n  static defaultProps = {\n    className: \"layout\",\n    // items: 6,\n    items: [\n      { type: \"Bar Chart\", id: 1 },\n      { type: \"Line Chart\", id: 2 },\n      { type: \"Doughnut Chart\", id: 3 },\n      { type: \"Pie Chart\", id: 4 },\n      { type: \"Stackbar Chart\", id: 5 },\n      { type: \"Radar Chart\", id: 6 }\n    ],\n\n    cols: 8\n  };\n\n  constructor(props) {\n    super(props);\n\n    const layout = this.generateLayout();\n    const isHovering = false;\n    console.log(PlotData);\n    console.log(layout);\n    this.state = { layout, isHovering };\n    console.log(isHovering);\n    this.handleMouseHover = this.handleMouseHover.bind(this);\n  }\n\n  handleMouseHover() {\n    this.setState(this.toggleHoverState);\n  }\n\n  toggleHoverState(state) {\n    return {\n      isHovering: !state.isHovering\n    };\n  }\n\n  openEditWidget = () => {\n    console.log(\"button clicked\");\n  };\n\n  generateDOM() {\n    return this.props.items.map(i => (\n      <Grid\n        component={Paper}\n        style={{\n          borderRadius: \"3px\"\n        }}\n        key={i.id}\n      >\n        <div style={{ maxHeight: \"50px\" }}>\n          <div\n            style={{\n              float: \"left\",\n              marginTop: \"15px\",\n              marginLeft: \"10px\",\n              fontSize: \"16px\"\n            }}\n          >\n            {i.type == \"Bar Chart\" && i.id == 1 ? <b>{i.type}</b> : null}\n            {i.type == \"Line Chart\" && i.id == 2 ? <b>{i.type}</b> : null}\n            {i.type == \"Doughnut Chart\" && i.id == 3 ? <b>{i.type}</b> : null}\n            {i.type == \"Pie Chart\" && i.id == 4 ? <b>{i.type}</b> : null}\n            {i.type == \"Stackbar Chart\" && i.id == 5 ? <b>{i.type}</b> : null}\n            {i.type == \"Radar Chart\" && i.id == 6 ? <b>{i.type}</b> : null}\n          </div>\n        </div>\n        {i.type == \"Bar Chart\" && i.id == 1 ? (\n          <BarChart\n            data={PlotData[2].data}\n            title={PlotData[2].title}\n            color=\"#BB86FC\"\n          />\n        ) : null}\n        {i.type == \"Line Chart\" && i.id == 2 ? (\n          <LineChart\n            data={PlotData[0].data}\n            title={PlotData[0].title}\n            // color=\"#03DAC6\"\n            color=\"#661FFF\"\n          />\n        ) : null}\n        {i.type == \"Doughnut Chart\" && i.id == 3 ? (\n          <DoughnutChart\n            data={PlotData[3].data}\n            title={PlotData[3].title}\n            colors={[\n              \"#bb86fc\",\n              \"#c690ff\",\n              \"#d19aff\",\n              \"#dca5ff\",\n              \"#daaef6\",\n              \"#d8bcea\"\n            ]}\n          />\n        ) : null}\n      </Grid>\n    ));\n  }\n\n  generateLayout() {\n    const p = this.props;\n    console.log(this.props);\n    return _.map(new Array(p.items.length), function(item, i) {\n      console.log(item, i);\n      const y = _.result(p, \"y\") || Math.ceil(Math.random() * 1) + 1;\n      const xAxis = (i * 2 + 2) % 6;\n      return {\n        x: xAxis,\n        y: Math.floor(i / 6) * y,\n        w: 2,\n        h: y,\n        i: i.toString()\n      };\n    });\n  }\n\n  render() {\n    return (\n      <ReactGridLayout layout={this.state.layout} {...this.props}>\n        {this.generateDOM()}\n      </ReactGridLayout>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}