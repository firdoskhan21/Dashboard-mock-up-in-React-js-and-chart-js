{"ast":null,"code":"var _jsxFileName = \"/home/firdos/WORKDIR/Git-Repos/Dashboard-mock-up-in-React-js-and-chart-js/src/components/dash-widget/barChart.js\";\nimport React from \"react\";\nimport Chart from \"chart.js\";\n\nclass BarChart extends React.Component {\n  constructor(props) {\n    super(props);\n    this.canvasRef = React.createRef();\n  }\n\n  componentDidUpdate() {\n    this.myChart.data.labels = this.props.data.map(d => d.label);\n    this.myChart.data.datasets[0].data = this.props.data.map(d => d.value);\n    this.myChart.update();\n  }\n\n  componentDidMount() {\n    this.myChart = new Chart(this.canvasRef.current, {\n      type: \"bar\",\n      options: {\n        cornerRadius: 20,\n        maintainAspectRatio: false,\n        scales: {\n          fontFamily: \"Roboto,Arial,sans-serif\",\n          yAxes: [{\n            ticks: {\n              min: 0,\n              max: 100\n            }\n          }]\n        },\n        legend: {\n          align: \"start\",\n          display: false,\n          position: \"bottom\",\n          labels: {\n            // fontColor: \"#333\",\n            fontFamily: \"Roboto,Arial,sans-serif\"\n          }\n        }\n      },\n      data: {\n        labels: this.props.data.map(d => d.label),\n        datasets: [{\n          label: this.props.title,\n          data: this.props.data.map(d => d.value),\n          backgroundColor: this.props.color\n        }]\n      }\n    });\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      style: {\n        height: \"calc(100% - 60px)\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }, React.createElement(\"canvas\", {\n      ref: this.canvasRef,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default BarChart;","map":{"version":3,"sources":["/home/firdos/WORKDIR/Git-Repos/Dashboard-mock-up-in-React-js-and-chart-js/src/components/dash-widget/barChart.js"],"names":["React","Chart","BarChart","Component","constructor","props","canvasRef","createRef","componentDidUpdate","myChart","data","labels","map","d","label","datasets","value","update","componentDidMount","current","type","options","cornerRadius","maintainAspectRatio","scales","fontFamily","yAxes","ticks","min","max","legend","align","display","position","title","backgroundColor","color","render","height"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,MAAkB,UAAlB;;AAEA,MAAMC,QAAN,SAAuBF,KAAK,CAACG,SAA7B,CAAuC;AACrCC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AACA,SAAKC,SAAL,GAAiBN,KAAK,CAACO,SAAN,EAAjB;AACD;;AAEDC,EAAAA,kBAAkB,GAAG;AACnB,SAAKC,OAAL,CAAaC,IAAb,CAAkBC,MAAlB,GAA2B,KAAKN,KAAL,CAAWK,IAAX,CAAgBE,GAAhB,CAAoBC,CAAC,IAAIA,CAAC,CAACC,KAA3B,CAA3B;AACA,SAAKL,OAAL,CAAaC,IAAb,CAAkBK,QAAlB,CAA2B,CAA3B,EAA8BL,IAA9B,GAAqC,KAAKL,KAAL,CAAWK,IAAX,CAAgBE,GAAhB,CAAoBC,CAAC,IAAIA,CAAC,CAACG,KAA3B,CAArC;AACA,SAAKP,OAAL,CAAaQ,MAAb;AACD;;AAEDC,EAAAA,iBAAiB,GAAG;AAClB,SAAKT,OAAL,GAAe,IAAIR,KAAJ,CAAU,KAAKK,SAAL,CAAea,OAAzB,EAAkC;AAC/CC,MAAAA,IAAI,EAAE,KADyC;AAE/CC,MAAAA,OAAO,EAAE;AACPC,QAAAA,YAAY,EAAE,EADP;AAEPC,QAAAA,mBAAmB,EAAE,KAFd;AAGPC,QAAAA,MAAM,EAAE;AACNC,UAAAA,UAAU,EAAE,yBADN;AAENC,UAAAA,KAAK,EAAE,CACL;AACEC,YAAAA,KAAK,EAAE;AACLC,cAAAA,GAAG,EAAE,CADA;AAELC,cAAAA,GAAG,EAAE;AAFA;AADT,WADK;AAFD,SAHD;AAcPC,QAAAA,MAAM,EAAE;AACNC,UAAAA,KAAK,EAAE,OADD;AAENC,UAAAA,OAAO,EAAE,KAFH;AAGNC,UAAAA,QAAQ,EAAE,QAHJ;AAINtB,UAAAA,MAAM,EAAE;AACN;AACAc,YAAAA,UAAU,EAAE;AAFN;AAJF;AAdD,OAFsC;AA0B/Cf,MAAAA,IAAI,EAAE;AACJC,QAAAA,MAAM,EAAE,KAAKN,KAAL,CAAWK,IAAX,CAAgBE,GAAhB,CAAoBC,CAAC,IAAIA,CAAC,CAACC,KAA3B,CADJ;AAEJC,QAAAA,QAAQ,EAAE,CACR;AACED,UAAAA,KAAK,EAAE,KAAKT,KAAL,CAAW6B,KADpB;AAEExB,UAAAA,IAAI,EAAE,KAAKL,KAAL,CAAWK,IAAX,CAAgBE,GAAhB,CAAoBC,CAAC,IAAIA,CAAC,CAACG,KAA3B,CAFR;AAGEmB,UAAAA,eAAe,EAAE,KAAK9B,KAAL,CAAW+B;AAH9B,SADQ;AAFN;AA1ByC,KAAlC,CAAf;AAqCD;;AAEDC,EAAAA,MAAM,GAAG;AACP,WACE;AAAK,MAAA,KAAK,EAAE;AAAEC,QAAAA,MAAM,EAAE;AAAV,OAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAQ,MAAA,GAAG,EAAE,KAAKhC,SAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CADF;AAKD;;AA1DoC;;AA6DvC,eAAeJ,QAAf","sourcesContent":["import React from \"react\";\nimport Chart from \"chart.js\";\n\nclass BarChart extends React.Component {\n  constructor(props) {\n    super(props);\n    this.canvasRef = React.createRef();\n  }\n\n  componentDidUpdate() {\n    this.myChart.data.labels = this.props.data.map(d => d.label);\n    this.myChart.data.datasets[0].data = this.props.data.map(d => d.value);\n    this.myChart.update();\n  }\n\n  componentDidMount() {\n    this.myChart = new Chart(this.canvasRef.current, {\n      type: \"bar\",\n      options: {\n        cornerRadius: 20,\n        maintainAspectRatio: false,\n        scales: {\n          fontFamily: \"Roboto,Arial,sans-serif\",\n          yAxes: [\n            {\n              ticks: {\n                min: 0,\n                max: 100\n              }\n            }\n          ]\n        },\n        legend: {\n          align: \"start\",\n          display: false,\n          position: \"bottom\",\n          labels: {\n            // fontColor: \"#333\",\n            fontFamily: \"Roboto,Arial,sans-serif\"\n          }\n        }\n      },\n      data: {\n        labels: this.props.data.map(d => d.label),\n        datasets: [\n          {\n            label: this.props.title,\n            data: this.props.data.map(d => d.value),\n            backgroundColor: this.props.color\n          }\n        ]\n      }\n    });\n  }\n\n  render() {\n    return (\n      <div style={{ height: \"calc(100% - 60px)\" }}>\n        <canvas ref={this.canvasRef} />\n      </div>\n    );\n  }\n}\n\nexport default BarChart;\n"]},"metadata":{},"sourceType":"module"}