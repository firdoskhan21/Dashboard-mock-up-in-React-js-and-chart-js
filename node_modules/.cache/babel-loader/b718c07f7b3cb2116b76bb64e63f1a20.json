{"ast":null,"code":"var _jsxFileName = \"/home/firdos/WORKDIR/Git-Repos/Dashboard-mock-up-in-React-js-and-chart-js/src/components/dash-widget/lineChart.js\";\nimport React from \"react\";\nimport Chart from \"chart.js\";\n\nclass LineChart extends React.Component {\n  constructor(props) {\n    super(props);\n    this.canvasRef = React.createRef();\n  }\n\n  componentDidUpdate() {\n    this.myChart.data.labels = this.props.data.map(d => d.time);\n    this.myChart.data.datasets[0].data = this.props.data.map(d => d.value);\n    this.myChart.update();\n  }\n\n  componentDidMount() {\n    this.myChart = new Chart(this.canvasRef.current, {\n      type: \"line\",\n      options: {\n        fontFamily: \"Roboto,Arial,sans-serif\",\n        maintainAspectRatio: false,\n        scales: {\n          xAxes: [{\n            type: \"time\",\n            time: {\n              unit: \"week\"\n            }\n          }],\n          yAxes: [{\n            ticks: {\n              min: 0\n            }\n          }]\n        },\n        legend: {\n          align: \"start\",\n          display: false,\n          position: \"bottom\",\n          labels: {\n            // fontColor: \"#333\",\n            fontFamily: \"Roboto,Arial,sans-serif\"\n          }\n        }\n      },\n      data: {\n        labels: this.props.data.map(d => d.time),\n        datasets: [{\n          fontFamily: \"Roboto,Arial,sans-serif\",\n          label: this.props.title,\n          data: this.props.data.map(d => d.value),\n          fill: \"none\",\n          backgroundColor: this.props.color,\n          pointRadius: 2,\n          borderColor: this.props.color,\n          borderWidth: 1,\n          lineTension: 0\n        }]\n      }\n    });\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      style: {\n        height: \"calc(100% - 60px)\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    }, React.createElement(\"canvas\", {\n      ref: this.canvasRef,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default LineChart;","map":{"version":3,"sources":["/home/firdos/WORKDIR/Git-Repos/Dashboard-mock-up-in-React-js-and-chart-js/src/components/dash-widget/lineChart.js"],"names":["React","Chart","LineChart","Component","constructor","props","canvasRef","createRef","componentDidUpdate","myChart","data","labels","map","d","time","datasets","value","update","componentDidMount","current","type","options","fontFamily","maintainAspectRatio","scales","xAxes","unit","yAxes","ticks","min","legend","align","display","position","label","title","fill","backgroundColor","color","pointRadius","borderColor","borderWidth","lineTension","render","height"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,MAAkB,UAAlB;;AAEA,MAAMC,SAAN,SAAwBF,KAAK,CAACG,SAA9B,CAAwC;AACtCC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AACA,SAAKC,SAAL,GAAiBN,KAAK,CAACO,SAAN,EAAjB;AACD;;AAEDC,EAAAA,kBAAkB,GAAG;AACnB,SAAKC,OAAL,CAAaC,IAAb,CAAkBC,MAAlB,GAA2B,KAAKN,KAAL,CAAWK,IAAX,CAAgBE,GAAhB,CAAoBC,CAAC,IAAIA,CAAC,CAACC,IAA3B,CAA3B;AACA,SAAKL,OAAL,CAAaC,IAAb,CAAkBK,QAAlB,CAA2B,CAA3B,EAA8BL,IAA9B,GAAqC,KAAKL,KAAL,CAAWK,IAAX,CAAgBE,GAAhB,CAAoBC,CAAC,IAAIA,CAAC,CAACG,KAA3B,CAArC;AACA,SAAKP,OAAL,CAAaQ,MAAb;AACD;;AAEDC,EAAAA,iBAAiB,GAAG;AAClB,SAAKT,OAAL,GAAe,IAAIR,KAAJ,CAAU,KAAKK,SAAL,CAAea,OAAzB,EAAkC;AAC/CC,MAAAA,IAAI,EAAE,MADyC;AAE/CC,MAAAA,OAAO,EAAE;AACPC,QAAAA,UAAU,EAAE,yBADL;AAEPC,QAAAA,mBAAmB,EAAE,KAFd;AAGPC,QAAAA,MAAM,EAAE;AACNC,UAAAA,KAAK,EAAE,CACL;AACEL,YAAAA,IAAI,EAAE,MADR;AAEEN,YAAAA,IAAI,EAAE;AACJY,cAAAA,IAAI,EAAE;AADF;AAFR,WADK,CADD;AASNC,UAAAA,KAAK,EAAE,CACL;AACEC,YAAAA,KAAK,EAAE;AACLC,cAAAA,GAAG,EAAE;AADA;AADT,WADK;AATD,SAHD;AAoBPC,QAAAA,MAAM,EAAE;AACNC,UAAAA,KAAK,EAAE,OADD;AAENC,UAAAA,OAAO,EAAE,KAFH;AAGNC,UAAAA,QAAQ,EAAE,QAHJ;AAINtB,UAAAA,MAAM,EAAE;AACN;AACAW,YAAAA,UAAU,EAAE;AAFN;AAJF;AApBD,OAFsC;AAgC/CZ,MAAAA,IAAI,EAAE;AACJC,QAAAA,MAAM,EAAE,KAAKN,KAAL,CAAWK,IAAX,CAAgBE,GAAhB,CAAoBC,CAAC,IAAIA,CAAC,CAACC,IAA3B,CADJ;AAEJC,QAAAA,QAAQ,EAAE,CACR;AACEO,UAAAA,UAAU,EAAE,yBADd;AAEEY,UAAAA,KAAK,EAAE,KAAK7B,KAAL,CAAW8B,KAFpB;AAGEzB,UAAAA,IAAI,EAAE,KAAKL,KAAL,CAAWK,IAAX,CAAgBE,GAAhB,CAAoBC,CAAC,IAAIA,CAAC,CAACG,KAA3B,CAHR;AAIEoB,UAAAA,IAAI,EAAE,MAJR;AAKEC,UAAAA,eAAe,EAAE,KAAKhC,KAAL,CAAWiC,KAL9B;AAMEC,UAAAA,WAAW,EAAE,CANf;AAOEC,UAAAA,WAAW,EAAE,KAAKnC,KAAL,CAAWiC,KAP1B;AAQEG,UAAAA,WAAW,EAAE,CARf;AASEC,UAAAA,WAAW,EAAE;AATf,SADQ;AAFN;AAhCyC,KAAlC,CAAf;AAiDD;;AAEDC,EAAAA,MAAM,GAAG;AACP,WACE;AAAK,MAAA,KAAK,EAAE;AAAEC,QAAAA,MAAM,EAAE;AAAV,OAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAQ,MAAA,GAAG,EAAE,KAAKtC,SAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CADF;AAKD;;AAtEqC;;AAwExC,eAAeJ,SAAf","sourcesContent":["import React from \"react\";\nimport Chart from \"chart.js\";\n\nclass LineChart extends React.Component {\n  constructor(props) {\n    super(props);\n    this.canvasRef = React.createRef();\n  }\n\n  componentDidUpdate() {\n    this.myChart.data.labels = this.props.data.map(d => d.time);\n    this.myChart.data.datasets[0].data = this.props.data.map(d => d.value);\n    this.myChart.update();\n  }\n\n  componentDidMount() {\n    this.myChart = new Chart(this.canvasRef.current, {\n      type: \"line\",\n      options: {\n        fontFamily: \"Roboto,Arial,sans-serif\",\n        maintainAspectRatio: false,\n        scales: {\n          xAxes: [\n            {\n              type: \"time\",\n              time: {\n                unit: \"week\"\n              }\n            }\n          ],\n          yAxes: [\n            {\n              ticks: {\n                min: 0\n              }\n            }\n          ]\n        },\n        legend: {\n          align: \"start\",\n          display: false,\n          position: \"bottom\",\n          labels: {\n            // fontColor: \"#333\",\n            fontFamily: \"Roboto,Arial,sans-serif\"\n          }\n        }\n      },\n      data: {\n        labels: this.props.data.map(d => d.time),\n        datasets: [\n          {\n            fontFamily: \"Roboto,Arial,sans-serif\",\n            label: this.props.title,\n            data: this.props.data.map(d => d.value),\n            fill: \"none\",\n            backgroundColor: this.props.color,\n            pointRadius: 2,\n            borderColor: this.props.color,\n            borderWidth: 1,\n            lineTension: 0\n          }\n        ]\n      }\n    });\n  }\n\n  render() {\n    return (\n      <div style={{ height: \"calc(100% - 60px)\" }}>\n        <canvas ref={this.canvasRef} />\n      </div>\n    );\n  }\n}\nexport default LineChart;\n"]},"metadata":{},"sourceType":"module"}