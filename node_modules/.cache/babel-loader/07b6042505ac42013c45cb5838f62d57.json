{"ast":null,"code":"var _jsxFileName = \"/home/firdos/WORKDIR/Git-Repos/dashboard-demo/src/components/dashboard-widget.js\";\nimport React from \"react\";\nimport BarChart from \"./dash-widget/barChart\";\nimport LineChart from \"./dash-widget/lineChart\";\nimport DoughnutChart from \"./dash-widget/doughnut\";\nimport { Paper } from \"@material-ui/core\";\nimport { Grid } from \"@material-ui/core\";\n\nvar Chart = require(\"chart.js\");\n\nfunction getRandomArray(numItems) {\n  // Create random array of objects\n  let names = \"ABCDEFGHIJKLMNOPQRSTUVWXYZ\";\n  let data = [];\n\n  for (var i = 0; i < numItems; i++) {\n    data.push({\n      label: names[i],\n      value: Math.round(20 + 80 * Math.random())\n    });\n  }\n\n  return data;\n}\n\nfunction getRandomDateArray(numItems) {\n  // Create random array of objects (with date)\n  let data = [];\n  let baseTime = new Date(\"2018-05-01T00:00:00\").getTime();\n  let dayMs = 24 * 60 * 60 * 1000;\n\n  for (var i = 0; i < numItems; i++) {\n    data.push({\n      time: new Date(baseTime + i * dayMs),\n      value: Math.round(20 + 80 * Math.random())\n    });\n  }\n\n  return data;\n}\n\nfunction getData() {\n  let data = [];\n  data.push({\n    type: \"BarChart\",\n    title: \"Visits\",\n    data: getRandomDateArray(150)\n  });\n  data.push({\n    title: \"Categories\",\n    data: getRandomArray(20)\n  });\n  data.push({\n    title: \"Categories\",\n    data: getRandomArray(10)\n  });\n  data.push({\n    title: \"Data 4\",\n    data: getRandomArray(6)\n  });\n  return data;\n}\n\nconst PlotData = getData();\nexport default class DashboardWidget extends React.PureComponent {\n  constructor(props) {\n    super(props);\n  }\n\n  handleMouseHover() {\n    this.setState(this.toggleHoverState);\n  }\n\n  toggleHoverState(state) {\n    return {\n      isHovering: !state.isHovering\n    };\n  }\n\n  render() {\n    return this.props.items.map(i => React.createElement(Grid, {\n      direction: \"row\",\n      component: Paper,\n      style: {\n        borderRadius: \"3px\"\n      },\n      key: i.id,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93\n      },\n      __self: this\n    }, React.createElement(Grid, {\n      item: true,\n      md: 3,\n      sm: 6,\n      lg: 4,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102\n      },\n      __self: this\n    }, i.type == \"Bar Chart\" && i.id == 1 ? React.createElement(\"b\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103\n      },\n      __self: this\n    }, i.type) : null, i.type == \"Line Chart\" && i.id == 2 ? React.createElement(\"b\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104\n      },\n      __self: this\n    }, i.type) : null, i.type == \"Doughnut Chart\" && i.id == 3 ? React.createElement(\"b\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105\n      },\n      __self: this\n    }, i.type) : null, i.type == \"Pie Chart\" && i.id == 4 ? React.createElement(\"b\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106\n      },\n      __self: this\n    }, i.type) : null, i.type == \"Stackbar Chart\" && i.id == 5 ? React.createElement(\"b\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107\n      },\n      __self: this\n    }, i.type) : null, i.type == \"Radar Chart\" && i.id == 6 ? React.createElement(\"b\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108\n      },\n      __self: this\n    }, i.type) : null), i.type == \"Bar Chart\" && i.id == 1 ? React.createElement(BarChart, {\n      data: PlotData[2].data,\n      title: PlotData[2].title,\n      color: \"#BB86FC\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111\n      },\n      __self: this\n    }) : null, i.type == \"Line Chart\" && i.id == 2 ? React.createElement(LineChart, {\n      data: PlotData[0].data,\n      title: PlotData[0].title // color=\"#03DAC6\"\n      ,\n      color: \"#661FFF\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118\n      },\n      __self: this\n    }) : null, i.type == \"Doughnut Chart\" && i.id == 3 ? React.createElement(DoughnutChart, {\n      data: PlotData[3].data,\n      title: PlotData[3].title,\n      colors: [\"#bb86fc\", \"#c690ff\", \"#d19aff\", \"#dca5ff\", \"#daaef6\", \"#d8bcea\"],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126\n      },\n      __self: this\n    }) : null)));\n  }\n\n}\nDashboardWidget.defaultProps = {\n  className: \"layout\",\n  // items: 6,\n  items: [{\n    type: \"Bar Chart\",\n    id: 1\n  }, {\n    type: \"Line Chart\",\n    id: 2\n  }, {\n    type: \"Doughnut Chart\",\n    id: 3\n  }],\n  cols: 8\n};","map":{"version":3,"sources":["/home/firdos/WORKDIR/Git-Repos/dashboard-demo/src/components/dashboard-widget.js"],"names":["React","BarChart","LineChart","DoughnutChart","Paper","Grid","Chart","require","getRandomArray","numItems","names","data","i","push","label","value","Math","round","random","getRandomDateArray","baseTime","Date","getTime","dayMs","time","getData","type","title","PlotData","DashboardWidget","PureComponent","constructor","props","handleMouseHover","setState","toggleHoverState","state","isHovering","render","items","map","borderRadius","id","defaultProps","className","cols"],"mappings":"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","sourcesContent":["import React from \"react\";\n\nimport BarChart from \"./dash-widget/barChart\";\nimport LineChart from \"./dash-widget/lineChart\";\nimport DoughnutChart from \"./dash-widget/doughnut\";\nimport { Paper } from \"@material-ui/core\";\n\nimport { Grid } from \"@material-ui/core\";\nvar Chart = require(\"chart.js\");\n\nfunction getRandomArray(numItems) {\n  // Create random array of objects\n  let names = \"ABCDEFGHIJKLMNOPQRSTUVWXYZ\";\n  let data = [];\n  for (var i = 0; i < numItems; i++) {\n    data.push({\n      label: names[i],\n      value: Math.round(20 + 80 * Math.random())\n    });\n  }\n  return data;\n}\n\nfunction getRandomDateArray(numItems) {\n  // Create random array of objects (with date)\n  let data = [];\n  let baseTime = new Date(\"2018-05-01T00:00:00\").getTime();\n  let dayMs = 24 * 60 * 60 * 1000;\n  for (var i = 0; i < numItems; i++) {\n    data.push({\n      time: new Date(baseTime + i * dayMs),\n      value: Math.round(20 + 80 * Math.random())\n    });\n  }\n  return data;\n}\nfunction getData() {\n  let data = [];\n\n  data.push({\n    type: \"BarChart\",\n    title: \"Visits\",\n    data: getRandomDateArray(150)\n  });\n\n  data.push({\n    title: \"Categories\",\n    data: getRandomArray(20)\n  });\n\n  data.push({\n    title: \"Categories\",\n    data: getRandomArray(10)\n  });\n\n  data.push({\n    title: \"Data 4\",\n    data: getRandomArray(6)\n  });\n\n  return data;\n}\nconst PlotData = getData();\nexport default class DashboardWidget extends React.PureComponent {\n  static defaultProps = {\n    className: \"layout\",\n    // items: 6,\n    items: [\n      { type: \"Bar Chart\", id: 1 },\n      { type: \"Line Chart\", id: 2 },\n      { type: \"Doughnut Chart\", id: 3 }\n    ],\n\n    cols: 8\n  };\n\n  constructor(props) {\n    super(props);\n  }\n\n  handleMouseHover() {\n    this.setState(this.toggleHoverState);\n  }\n\n  toggleHoverState(state) {\n    return {\n      isHovering: !state.isHovering\n    };\n  }\n\n  render() {\n    return this.props.items.map(i => (\n      <Grid\n        direction=\"row\"\n        component={Paper}\n        style={{\n          borderRadius: \"3px\"\n        }}\n        key={i.id}\n      >\n        <Grid item md={3} sm={6} lg={4}>\n          <div>\n            {i.type == \"Bar Chart\" && i.id == 1 ? <b>{i.type}</b> : null}\n            {i.type == \"Line Chart\" && i.id == 2 ? <b>{i.type}</b> : null}\n            {i.type == \"Doughnut Chart\" && i.id == 3 ? <b>{i.type}</b> : null}\n            {i.type == \"Pie Chart\" && i.id == 4 ? <b>{i.type}</b> : null}\n            {i.type == \"Stackbar Chart\" && i.id == 5 ? <b>{i.type}</b> : null}\n            {i.type == \"Radar Chart\" && i.id == 6 ? <b>{i.type}</b> : null}\n          </div>\n          {i.type == \"Bar Chart\" && i.id == 1 ? (\n            <BarChart\n              data={PlotData[2].data}\n              title={PlotData[2].title}\n              color=\"#BB86FC\"\n            />\n          ) : null}\n          {i.type == \"Line Chart\" && i.id == 2 ? (\n            <LineChart\n              data={PlotData[0].data}\n              title={PlotData[0].title}\n              // color=\"#03DAC6\"\n              color=\"#661FFF\"\n            />\n          ) : null}\n          {i.type == \"Doughnut Chart\" && i.id == 3 ? (\n            <DoughnutChart\n              data={PlotData[3].data}\n              title={PlotData[3].title}\n              colors={[\n                \"#bb86fc\",\n                \"#c690ff\",\n                \"#d19aff\",\n                \"#dca5ff\",\n                \"#daaef6\",\n                \"#d8bcea\"\n              ]}\n            />\n          ) : null}\n        </Grid>\n      </Grid>\n    ));\n  }\n}\n"]},"metadata":{},"sourceType":"module"}